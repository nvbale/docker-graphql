name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        major_pattern: "major:"
        minor_pattern: "feat:"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version

    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Build & Push Docker Image with Buildx
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker buildx create --name mybuilder --driver docker-container --bootstrap
        docker buildx use mybuilder
        docker buildx build --platform linux/amd64,linux/arm64 -t nvbale/docker-graphql:$NEW_VERSION --push .
        docker buildx build --platform linux/amd64,linux/arm64 -t nvbale/docker-graphql:latest --push .




    # - name: Build Docker Image
    #   env:
    #     NEW_VERSION: ${{ steps.version.outputs.version }}
    #   run: |
    #     docker build -t nvbale/docker-graphql:$NEW_VERSION .
    #     docker build -t nvbale/docker-graphql:latest .

    # - name: Push Docker Image
    #   env:
    #     NEW_VERSION: ${{ steps.version.outputs.version }}
    #   run: |
    #     docker push nvbale/docker-graphql:$NEW_VERSION
    #     docker push nvbale/docker-graphql:latest



    
      
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
